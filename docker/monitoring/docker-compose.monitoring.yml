version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: supabase_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml:ro'
      - './instances.json:/etc/prometheus/instances.json:ro'
      - './alerts/alerting_rules.yml:/etc/prometheus/alerting_rules.yml:ro'
      - 'prometheus_data:/prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: supabase_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - 'grafana_data:/var/lib/grafana'
      - './grafana/provisioning:/etc/grafana/provisioning'
      - './grafana/dashboards:/var/lib/grafana/dashboards'
    depends_on:
      - prometheus
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager:latest
    container_name: supabase_alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - './alerts/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro'
      - 'alertmanager_data:/alertmanager'
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--web.route-prefix=/'
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: supabase_node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/rootfs:ro'
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: supabase_cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker:/var/lib/docker:ro'
      - '/dev/disk:/dev/disk:ro'
    privileged: true
    devices:
      - '/dev/kmsg'
    networks:
      - monitoring

  # Exporter customizado para m√©tricas Supabase
  supabase-exporter:
    build:
      context: ./exporter
      dockerfile: Dockerfile
    container_name: supabase_exporter
    restart: unless-stopped
    ports:
      - "9200:9200"
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - MASTER_DB_URL=${MASTER_DB_URL:-postgresql://postgres:postgres@host.docker.internal:5432/supabase_master}
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  monitoring:
    external: false
    name: supabase_monitoring